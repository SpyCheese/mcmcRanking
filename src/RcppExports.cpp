// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// mcmc_subgraph_internal
IntegerVector mcmc_subgraph_internal(DataFrame df_edges, IntegerVector args);
RcppExport SEXP _mcmcRanking_mcmc_subgraph_internal(SEXP df_edgesSEXP, SEXP argsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type df_edges(df_edgesSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type args(argsSEXP);
    rcpp_result_gen = Rcpp::wrap(mcmc_subgraph_internal(df_edges, args));
    return rcpp_result_gen;
END_RCPP
}
// mcmc_sample_internal
IntegerVector mcmc_sample_internal(DataFrame df_edges, DataFrame df_nodes, IntegerVector args);
RcppExport SEXP _mcmcRanking_mcmc_sample_internal(SEXP df_edgesSEXP, SEXP df_nodesSEXP, SEXP argsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type df_edges(df_edgesSEXP);
    Rcpp::traits::input_parameter< DataFrame >::type df_nodes(df_nodesSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type args(argsSEXP);
    rcpp_result_gen = Rcpp::wrap(mcmc_sample_internal(df_edges, df_nodes, args));
    return rcpp_result_gen;
END_RCPP
}
// mcmc_onelong_internal
IntegerVector mcmc_onelong_internal(DataFrame df_edges, DataFrame df_nodes, IntegerVector args);
RcppExport SEXP _mcmcRanking_mcmc_onelong_internal(SEXP df_edgesSEXP, SEXP df_nodesSEXP, SEXP argsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type df_edges(df_edgesSEXP);
    Rcpp::traits::input_parameter< DataFrame >::type df_nodes(df_nodesSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type args(argsSEXP);
    rcpp_result_gen = Rcpp::wrap(mcmc_onelong_internal(df_edges, df_nodes, args));
    return rcpp_result_gen;
END_RCPP
}
// mcmc_inverse_likelihood_internal
NumericVector mcmc_inverse_likelihood_internal(DataFrame df_edges, DataFrame df_nodes, IntegerVector args);
RcppExport SEXP _mcmcRanking_mcmc_inverse_likelihood_internal(SEXP df_edgesSEXP, SEXP df_nodesSEXP, SEXP argsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type df_edges(df_edgesSEXP);
    Rcpp::traits::input_parameter< DataFrame >::type df_nodes(df_nodesSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type args(argsSEXP);
    rcpp_result_gen = Rcpp::wrap(mcmc_inverse_likelihood_internal(df_edges, df_nodes, args));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_mcmcRanking_mcmc_subgraph_internal", (DL_FUNC) &_mcmcRanking_mcmc_subgraph_internal, 2},
    {"_mcmcRanking_mcmc_sample_internal", (DL_FUNC) &_mcmcRanking_mcmc_sample_internal, 3},
    {"_mcmcRanking_mcmc_onelong_internal", (DL_FUNC) &_mcmcRanking_mcmc_onelong_internal, 3},
    {"_mcmcRanking_mcmc_inverse_likelihood_internal", (DL_FUNC) &_mcmcRanking_mcmc_inverse_likelihood_internal, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_mcmcRanking(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
